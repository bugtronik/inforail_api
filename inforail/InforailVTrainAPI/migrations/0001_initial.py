# Generated by Django 5.0.10 on 2025-01-07 14:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SpErametVtrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_from', models.DateTimeField(blank=True, db_column='VERSION_FROM', null=True)),
                ('version_to', models.DateTimeField(blank=True, db_column='VERSION_TO', null=True)),
                ('is_current', models.CharField(blank=True, db_column='IS_CURRENT', max_length=1, null=True)),
                ('id_mega_train', models.FloatField(blank=True, db_column='ID_MEGA_TRAIN', null=True)),
                ('numero_train', models.CharField(blank=True, db_column='NUMERO_TRAIN', max_length=200, null=True)),
                ('dt_from', models.DateTimeField(blank=True, db_column='DT_FROM', null=True)),
                ('dt_to', models.DateTimeField(blank=True, db_column='DT_TO', null=True)),
                ('gare_ou_canton_from', models.CharField(blank=True, db_column='GARE_OU_CANTON_FROM', max_length=200, null=True)),
                ('gare_ou_canton_to', models.CharField(blank=True, db_column='GARE_OU_CANTON_TO', max_length=200, null=True)),
                ('gare_ou_canton_to_or_destination', models.CharField(blank=True, db_column='GARE_OU_CANTON_TO_OR_DESTINATION', max_length=200, null=True)),
                ('sens', models.CharField(blank=True, db_column='SENS', max_length=200, null=True)),
                ('categorie_train', models.CharField(blank=True, db_column='CATEGORIE_TRAIN', max_length=200, null=True)),
                ('situation_du_train', models.CharField(blank=True, db_column='SITUATION_DU_TRAIN', max_length=200, null=True)),
                ('locomotive', models.CharField(blank=True, db_column='LOCOMOTIVE', max_length=200, null=True)),
                ('real_dt_from', models.DateTimeField(blank=True, db_column='REAL_DT_FROM', null=True)),
                ('real_dt_to', models.DateTimeField(blank=True, db_column='REAL_DT_TO', null=True)),
                ('real_gare_ou_canton_from', models.CharField(blank=True, db_column='REAL_GARE_OU_CANTON_FROM', max_length=200, null=True)),
                ('real_gare_ou_canton_to', models.CharField(blank=True, db_column='REAL_GARE_OU_CANTON_TO', max_length=200, null=True)),
                ('real_distance_parcourue_tot', models.FloatField(blank=True, db_column='REAL_DISTANCE_PARCOURUE_TOT', null=True)),
                ('real_temps_parc_h_en_canton', models.FloatField(blank=True, db_column='REAL_TEMPS_PARC_H_EN_CANTON', null=True)),
                ('real_temps_parc_h_en_gare', models.FloatField(blank=True, db_column='REAL_TEMPS_PARC_H_EN_GARE', null=True)),
                ('real_temps_attente_h_en_gare', models.FloatField(blank=True, db_column='REAL_TEMPS_ATTENTE_H_EN_GARE', null=True)),
                ('real_temps_expedit_h_en_gare', models.FloatField(blank=True, db_column='REAL_TEMPS_EXPEDIT_H_EN_GARE', null=True)),
                ('distance_a_parcourir', models.FloatField(blank=True, db_column='DISTANCE_A_PARCOURIR', null=True)),
                ('comilog_dt_from', models.DateTimeField(blank=True, db_column='COMILOG_DT_FROM', null=True)),
                ('comilog_dt_to', models.DateTimeField(blank=True, db_column='COMILOG_DT_TO', null=True)),
                ('all_locomotives', models.CharField(blank=True, db_column='ALL_LOCOMOTIVES', max_length=200, null=True)),
            ],
            options={
                'db_table': 'SP_ERAMET_VTRAIN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpErametVtrainMetaDonnees',
            fields=[
                ('id', models.IntegerField(db_column='Id', primary_key=True, serialize=False)),
                ('id_mega_train', models.IntegerField(db_column='Id_Mega_Train')),
                ('id_mega_train_precedent', models.IntegerField(blank=True, db_column='Id_Mega_Train_Precedent', null=True)),
                ('id_mega_train_suivant', models.IntegerField(blank=True, db_column='Id_Mega_Train_Suivant', null=True)),
                ('releve_a_renseigner', models.BooleanField(db_column='Releve_A_Renseigner')),
                ('active', models.BooleanField(db_column='Active')),
                ('createdby', models.CharField(db_column='CreatedBy', max_length=50)),
                ('createdutc', models.DateTimeField(db_column='CreatedUtc')),
                ('modifiedby', models.CharField(blank=True, db_column='ModifiedBy', max_length=50, null=True)),
                ('modifiedutc', models.DateTimeField(blank=True, db_column='ModifiedUtc', null=True)),
                ('commentaire_releve', models.TextField(blank=True, db_column='Commentaire_Releve', null=True)),
                ('flipping_id', models.IntegerField(blank=True, null=True)),
                ('trainjournalid', models.IntegerField(blank=True, null=True)),
                ('date_mad_setrag_selon_comilog', models.DateTimeField(blank=True, null=True)),
                ('temps_trajet_aller', models.FloatField(blank=True, null=True)),
                ('temps_entre_1_et_2', models.FloatField(blank=True, null=True)),
                ('temps_trajet_retour', models.FloatField(blank=True, null=True)),
                ('temps_entre_2_et_3', models.FloatField(blank=True, null=True)),
                ('temps_de_cycle', models.FloatField(blank=True, null=True)),
                ('id_mega_train_suivant_n2', models.IntegerField(blank=True, null=True)),
                ('flipping_id_precedent', models.IntegerField(blank=True, null=True)),
                ('trainjournalid_precedent', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'SP_ERAMET_VTRAIN_META_DONNEES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpErametVtrainMini',
            fields=[
                ('id_mega_train', models.FloatField(db_column='ID_MEGA_TRAIN', primary_key=True, serialize=False)),
                ('numero_train', models.CharField(blank=True, db_column='NUMERO_TRAIN', max_length=200, null=True)),
                ('categorie_train', models.CharField(blank=True, db_column='CATEGORIE_TRAIN', max_length=200, null=True)),
                ('sens', models.CharField(blank=True, db_column='SENS', max_length=200, null=True)),
                ('situation_du_train', models.CharField(blank=True, db_column='SITUATION_DU_TRAIN', max_length=200, null=True)),
                ('gare_ou_canton_from', models.CharField(blank=True, db_column='GARE_OU_CANTON_FROM', max_length=200, null=True)),
                ('gare_ou_canton_to', models.CharField(blank=True, db_column='GARE_OU_CANTON_TO', max_length=200, null=True)),
                ('real_dt_from', models.DateTimeField(blank=True, db_column='REAL_DT_FROM', null=True)),
                ('real_dt_to', models.DateTimeField(blank=True, db_column='REAL_DT_TO', null=True)),
                ('real_temps_parc_h_en_canton', models.FloatField(blank=True, db_column='REAL_TEMPS_PARC_H_EN_CANTON', null=True)),
                ('real_temps_parc_h_en_gare', models.FloatField(blank=True, db_column='REAL_TEMPS_PARC_H_EN_GARE', null=True)),
            ],
            options={
                'db_table': 'SP_ERAMET_VTRAIN_MINI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpErametVtrainMiniV2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_mega_train', models.FloatField(blank=True, db_column='ID_MEGA_TRAIN', null=True)),
                ('numero_train', models.TextField(blank=True, db_column='NUMERO_TRAIN', null=True)),
                ('categorie_train', models.TextField(blank=True, db_column='CATEGORIE_TRAIN', null=True)),
                ('sens', models.TextField(blank=True, db_column='SENS', null=True)),
                ('situation_du_train', models.TextField(blank=True, db_column='SITUATION_DU_TRAIN', null=True)),
                ('gare_ou_canton_from', models.TextField(blank=True, db_column='GARE_OU_CANTON_FROM', null=True)),
                ('gare_ou_canton_to', models.TextField(blank=True, db_column='GARE_OU_CANTON_TO', null=True)),
                ('real_dt_from', models.DateTimeField(blank=True, db_column='REAL_DT_FROM', null=True)),
                ('real_dt_to', models.DateTimeField(blank=True, db_column='REAL_DT_TO', null=True)),
                ('real_temps_parc_h_en_canton', models.FloatField(blank=True, db_column='REAL_TEMPS_PARC_H_EN_CANTON', null=True)),
                ('real_temps_parc_h_en_gare', models.FloatField(blank=True, db_column='REAL_TEMPS_PARC_H_EN_GARE', null=True)),
            ],
            options={
                'db_table': 'SP_ERAMET_VTRAIN_MINI_V2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpErametVtrainSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_mega_train', models.FloatField(blank=True, db_column='ID_MEGA_TRAIN', null=True)),
                ('numero_train', models.CharField(blank=True, db_column='NUMERO_TRAIN', max_length=200, null=True)),
                ('version_from', models.DateTimeField(blank=True, db_column='VERSION_FROM', null=True)),
                ('version_to', models.DateTimeField(blank=True, db_column='VERSION_TO', null=True)),
                ('is_current', models.CharField(blank=True, db_column='IS_CURRENT', max_length=1, null=True)),
                ('gare_ou_canton', models.CharField(blank=True, db_column='GARE_OU_CANTON', max_length=200, null=True)),
                ('dt_from', models.DateTimeField(blank=True, db_column='DT_FROM', null=True)),
                ('dt_to', models.DateTimeField(blank=True, db_column='DT_TO', null=True)),
                ('locomotive', models.CharField(blank=True, db_column='LOCOMOTIVE', max_length=200, null=True)),
                ('statut', models.CharField(blank=True, db_column='STATUT', max_length=200, null=True)),
                ('trace', models.CharField(blank=True, db_column='TRACE', max_length=4000, null=True)),
                ('seq', models.FloatField(blank=True, db_column='SEQ', null=True)),
                ('distance_parc_totale', models.FloatField(blank=True, db_column='DISTANCE_PARC_TOTALE', null=True)),
                ('distance_parcourue', models.FloatField(blank=True, db_column='DISTANCE_PARCOURUE', null=True)),
                ('distance_parc_totale_canton', models.FloatField(blank=True, db_column='DISTANCE_PARC_TOTALE_CANTON', null=True)),
                ('distance_parcourue_canton', models.FloatField(blank=True, db_column='DISTANCE_PARCOURUE_CANTON', null=True)),
                ('temps_traversee_totale_en_h', models.FloatField(blank=True, db_column='TEMPS_TRAVERSEE_TOTALE_EN_H', null=True)),
                ('temps_traversee_en_h', models.FloatField(blank=True, db_column='TEMPS_TRAVERSEE_EN_H', null=True)),
                ('temps_traversee_canton_totale_en_h', models.FloatField(blank=True, db_column='TEMPS_TRAVERSEE_CANTON_TOTALE_EN_H', null=True)),
                ('temps_traversee_canton_en_h', models.FloatField(blank=True, db_column='TEMPS_TRAVERSEE_CANTON_EN_H', null=True)),
                ('expedition_dt_from', models.DateTimeField(blank=True, db_column='EXPEDITION_DT_FROM', null=True)),
                ('expedition_dt_to', models.DateTimeField(blank=True, db_column='EXPEDITION_DT_TO', null=True)),
                ('other_expeditions', models.CharField(blank=True, db_column='OTHER_EXPEDITIONS', max_length=4000, null=True)),
                ('elements_de_voie_parcourus', models.FloatField(blank=True, db_column='ELEMENTS_DE_VOIE_PARCOURUS', null=True)),
                ('max_ev_id_elm', models.FloatField(blank=True, db_column='MAX_EV_ID_ELM', null=True)),
                ('interactions_cnt', models.FloatField(blank=True, db_column='INTERACTIONS_CNT', null=True)),
                ('double_cnt', models.FloatField(blank=True, db_column='DOUBLE_CNT', null=True)),
                ('se_fait_doubler_cnt', models.FloatField(blank=True, db_column='SE_FAIT_DOUBLER_CNT', null=True)),
                ('croise_cnt', models.FloatField(blank=True, db_column='CROISE_CNT', null=True)),
                ('poste_setrag', models.CharField(blank=True, db_column='POSTE_SETRAG', max_length=200, null=True)),
                ('id_segment', models.FloatField(blank=True, db_column='ID_SEGMENT', null=True)),
                ('nums_train_interaction', models.CharField(blank=True, db_column='NUMS_TRAIN_INTERACTION', max_length=4000, null=True)),
                ('ids_train_interaction', models.CharField(blank=True, db_column='IDS_TRAIN_INTERACTION', max_length=4000, null=True)),
                ('jour_setrag', models.DateTimeField(blank=True, db_column='JOUR_SETRAG', null=True)),
                ('scenario_interaction', models.CharField(blank=True, db_column='SCENARIO_INTERACTION', max_length=4000, null=True)),
                ('adherence_horaire_start_s', models.FloatField(blank=True, db_column='ADHERENCE_HORAIRE_START_S', null=True)),
                ('adherence_horaire_end_s', models.FloatField(blank=True, db_column='ADHERENCE_HORAIRE_END_S', null=True)),
                ('trace_tm_id_trm', models.FloatField(blank=True, db_column='TRACE_TM_ID_TRM', null=True)),
                ('sens', models.CharField(blank=True, db_column='SENS', max_length=200, null=True)),
                ('nombre_wagons', models.FloatField(blank=True, db_column='NOMBRE_WAGONS', null=True)),
                ('tonnage_brut', models.FloatField(blank=True, db_column='TONNAGE_BRUT', null=True)),
                ('longueur_m', models.FloatField(blank=True, db_column='LONGUEUR_M', null=True)),
                ('num_eot', models.FloatField(blank=True, db_column='NUM_EOT', null=True)),
                ('dernier_wagon', models.CharField(blank=True, db_column='DERNIER_WAGON', max_length=100, null=True)),
                ('nombre_wagons_vides', models.FloatField(blank=True, db_column='NOMBRE_WAGONS_VIDES', null=True)),
                ('nombre_wagons_pleins', models.FloatField(blank=True, db_column='NOMBRE_WAGONS_PLEINS', null=True)),
                ('all_locomotives', models.CharField(blank=True, db_column='ALL_LOCOMOTIVES', max_length=200, null=True)),
            ],
            options={
                'db_table': 'SP_ERAMET_VTRAIN_SEGMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpErametVtrainSegmentMini',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_mega_train', models.FloatField(blank=True, db_column='ID_MEGA_TRAIN', null=True)),
                ('numero_train', models.CharField(blank=True, db_column='NUMERO_TRAIN', max_length=200, null=True)),
                ('seq', models.FloatField(blank=True, db_column='SEQ', null=True)),
                ('gare_ou_canton', models.CharField(blank=True, db_column='GARE_OU_CANTON', max_length=200, null=True)),
                ('statut', models.CharField(blank=True, db_column='STATUT', max_length=200, null=True)),
                ('dt_from', models.DateTimeField(blank=True, db_column='DT_FROM', null=True)),
                ('dt_to', models.DateTimeField(blank=True, db_column='DT_TO', null=True)),
                ('distance_parcourue', models.FloatField(blank=True, db_column='DISTANCE_PARCOURUE', null=True)),
                ('temps_traversee_en_h', models.FloatField(blank=True, db_column='TEMPS_TRAVERSEE_EN_H', null=True)),
                ('poste_setrag', models.CharField(blank=True, db_column='POSTE_SETRAG', max_length=200, null=True)),
                ('jour_setrag', models.DateTimeField(blank=True, db_column='JOUR_SETRAG', null=True)),
                ('nombre_wagons', models.FloatField(blank=True, db_column='NOMBRE_WAGONS', null=True)),
                ('tonnage_brut', models.FloatField(blank=True, db_column='TONNAGE_BRUT', null=True)),
                ('longueur_m', models.FloatField(blank=True, db_column='LONGUEUR_M', null=True)),
                ('nombre_wagons_vides', models.FloatField(blank=True, db_column='NOMBRE_WAGONS_VIDES', null=True)),
                ('nombre_wagons_pleins', models.FloatField(blank=True, db_column='NOMBRE_WAGONS_PLEINS', null=True)),
                ('dernier_wagon', models.CharField(blank=True, db_column='DERNIER_WAGON', max_length=100, null=True)),
                ('all_locomotives', models.CharField(blank=True, db_column='ALL_LOCOMOTIVES', max_length=200, null=True)),
                ('id_segment', models.FloatField(blank=True, db_column='ID_SEGMENT', null=True)),
            ],
            options={
                'db_table': 'SP_ERAMET_VTRAIN_SEGMENT_MINI',
                'managed': False,
            },
        ),
    ]
